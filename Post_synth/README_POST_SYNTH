## üß© Gate-Level Simulation (GLS) of BabySoC

### üéØ Purpose of GLS
**Gate-Level Simulation (GLS)** is performed **after synthesis** to verify that the functionality of the SoC design remains correct once it has been converted from RTL (Register Transfer Level) code into an actual **gate-level netlist**.  
This netlist includes all the **gates, interconnections, and timing delays** used in real hardware implementation.

---

### üßÆ Pre-Synthesis vs Post-Synthesis Simulation

| Type | Description | Purpose |
|------|--------------|----------|
| **Pre-Synthesis (RTL Simulation)** | Simulation of the **behavioral/RTL design** (written in Verilog or VHDL). | Ensures that the logic, control flow, and data path behave correctly at an abstract level. Timing is **ideal (zero delay)**. |
| **Post-Synthesis (Gate-Level Simulation / GLS)** | Simulation of the **synthesized netlist** generated by tools like Yosys or Vivado. | Verifies that synthesis did not alter functionality, and checks **timing accuracy** using **Standard Delay Format (SDF)** files. |

‚úÖ **Why both are important:**
- **Pre-synthesis simulation** catches **logical or functional bugs** early in design.  
- **Post-synthesis GLS** ensures that **synthesis optimizations**, **gate delays**, and **realistic timing** do not introduce functional errors (like race conditions or glitches).

---

### ‚öôÔ∏è Key Aspects of GLS for BabySoC

#### 1. **Verification with Timing Information**
- GLS uses **Standard Delay Format (SDF)** files to inject **gate delays** into the simulation.
- Ensures the BabySoC behaves correctly under **real hardware timing constraints**.

#### 2. **Design Validation Post-Synthesis**
- Confirms that the synthesized **netlist** still performs the intended logic.
- Detects potential **metastability**, **glitches**, or **setup/hold violations** caused by real delays.

#### 3. **Simulation Tools**
- Use **Icarus Verilog** (for compiling and simulating) and **GTKWave** (for waveform analysis).
- Simulate the **synthesized netlist** (`.v`) along with the **testbench** and **SDF** delay files.

---

### üß† Importance for BabySoC
BabySoC integrates multiple hardware blocks such as:
- **RISC-V Processor Core**  
- **PLL (Phase-Locked Loop)**  
- **DAC and ADC modules**

GLS ensures that after synthesis:
- All modules **interact correctly** at gate level.  
- **Clock, reset, and data paths** meet timing.  
- The design is **ready for place-and-route (PnR)** or FPGA implementation.

---

### üß© Steps to Run GLS for BabySoC

1. **Generate the Synthesized Netlist**
   ```bash
yosys
   
